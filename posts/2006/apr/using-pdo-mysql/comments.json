[{"i":"444a7621-b41e-8007-4414-44a76217ebe5","d":"2006-04-22 18:29:53","u":"http:\/\/pooteeweet.org\/","n":"Lukas","c":"<p>Just for completeness here is the list of queries supported in the prepared API   <\/p>\n<p>&quot;The following SQL statements can be used in prepared statements: CREATE TABLE, DELETE, DO, INSERT, REPLACE, SELECT, SET, UPDATE, and most SHOW statements. Other statements are not yet supported.&quot;   <\/p>\n<p>Note for the bulk of the show command you can use the INFORMATION_SCHEMA starting with mysql5, though performance is subpar there ..   <\/p>\n<p>ANyways, in MDB2 I do not go through the prepared API at all when using query() and exec(). Maybe that is the way to go here too, especially since you cannot set parameters anyways and so preparing will actually just add overhead?   <\/p>\n<p>As for the query cache, I can see their rational for not sticking the queries into the query cache, but I guess they should support it somehow to better accomodate stateless computing setups (their main user base).  <\/p>","email":"http:\/\/pooteeweet.org\/","url":"http:\/\/pooteeweet.org\/"},{"i":"444a8fa6-1b34-0923-8574-44a8fa66463c","d":"2006-04-22 20:18:46","u":"anon","n":"Ren","c":"<p>So, native prepared SELECT statements do not use the query cache. But I'm guessing prepared statements are still the way togo with INSERT, UPDATE, &amp; DELETE.   <\/p>\n<p>CALL\/EXEC not being listed as supported by the prepared api, seems to indicate the problem is with mysql client, atleast.  <\/p>","email":"Ren","url":null},{"i":"444aa9e1-59a6-9129-2085-44aa9e13a1ab","d":"2006-04-22 22:10:41","u":"anon","n":"chris@dented-planet.net","c":"<p>So is there much of a performance hit for using emulated prepared statements rather than letting the MySQL engine prepare them (for vanilla SELECT, INSERT, UPDATE, DELETE statements)?   <\/p>\n<p>Also, do you see any change in your above recomendation (to use emulation) in the foreseeable future? (that is, do I need to put it on my list of &quot;behavior might change- keep checking back&quot; items?)   <\/p>\n<p>  <\/p>","email":"chris@dented-planet.net","url":null},{"i":"444ad914-9dd4-8814-5971-44ad9149df76","d":"2006-04-23 01:32:04","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>use emulated prepares for the foreseeable future<\/b><br\/>\n<p>The native prepared statement API is still quite young it seems.  I was considering making emulated prepares the default, but it seemed like a pretty drastic change to make for a minor point release.   <\/p>\n<p>I'm going to talk with the mysql folks next week to see what they're planning on that front.   <\/p>\n<p>In the meantime, use emulated prepares as they are faster and more reliable.  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"444ae825-c5fd-7812-8862-44ae825906db","d":"2006-04-23 02:36:21","u":"anon","n":"chris@dented-planet.net","c":"<p>From one end-user's perspective, it would actually make more sense to have the emulated behavior be the default if it's faster, more reliable, and allows the query cache to operate.   <\/p>\n<p>99% of us average users are going to want the emulation for the stated reasons and it saves having to do the setAttribute() call wrapped in a version_compare() call.   <\/p>\n<p>Make the deviants do the work and let the rest of us live in semi-ignorant bliss.   <\/p>\n<p>I respect the whole point release and change thing, but I have to wonder who, if anybody, is REALLY going to be negatively effected by a change if they notice at all?  <\/p>","email":"chris@dented-planet.net","url":null},{"i":"444c80c6-ba7c-9522-1209-44c80c6a08f5","d":"2006-04-24 07:39:50","u":"anon","n":"andrey from mysql com","c":"<b>Information schema<\/b><br\/>\n<p>Lukas, SHOW commands are built on top of Information_schema tables. The only one which has duplicated code is SHOW PROCESSLIST vs. SELECT FROM I_S.PROCESSLIST (5.1.7+). But MySQL is lacking internal data dictionary, which is a drawback when you have thousands of tables and you use either SHOW or I_S.  <\/p>","email":"andrey from mysql com","url":null},{"i":"444c8265-a3dc-5631-4140-44c8265ae426","d":"2006-04-24 07:46:45","u":"anon","n":"Jakub Vrana","c":"<b>HEAD<\/b><br\/>\n<p>Is there a reason why this is not in HEAD?  <\/p>","email":"Jakub Vrana","url":null},{"i":"444cb3f3-0a04-2398-1002-44cb3f335126","d":"2006-04-24 11:18:11","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>too busy for HEAD<\/b><br\/>\n<p>I've been so busy recently that I've focused what time I have had on the current release branch only.  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"c68e3a86-3230-40ac-856d-1c834250751f","d":"2007-07-06 08:50:14","u":"anon","n":"Bastien DAUGAS","c":"<b>Thanks a bunch !<\/b><br\/>\n<p>I was hitting a repeated problem with some import queries (General error 2030) and had begun to get pretty much annoyed with these working on every testing machine I had while totally failing on my production system.<\/p>\n<p>Your suggestion saved my brains, most of my afternoon and maybe my job ! Muchas Gracias !<\/p>","email":"Bastien DAUGAS","url":null}]