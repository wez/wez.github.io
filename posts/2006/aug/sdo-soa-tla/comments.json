[{"i":"44e167a3-71a0-6798-2902-4e167a36b728","d":"2006-08-15 06:20:19","u":"anon","n":"AC","c":"<b>uh?<\/b><br\/>\n<p>Wow!  That's a lot of graphs and charts.  I don't have anywhere near the attention span to read through all that.  This isn't the sort of stuff they need to write to get people interested in SDO.  They need to write a 10-line really useful example and a <b>short<\/b> blurb explaining it.  We don't need to know all the gory details or even most of the features up front, we just need to get an initial idea of what the hell it is used for.  And if it is interesting enough then maybe we will dive in and read the more detailed documentation.  But IBM has never been very good at being short and concise.  <\/p>","email":"AC","url":null,"did":"51534138"},{"i":"44e17a91-e43b-3559-8986-4e17a91424bf","d":"2006-08-15 07:41:05","u":"http:\/\/pooteeweet.org\/","n":"Lukas","c":"<p>People do like things like automatic CRUD and persistance layers. However it seems that IBM is using different lingo.   <\/p>\n<p>Also I think one of the key omissions that SDO had when I last looked at it was that SDO did not cover data selection, which seems to break the data storage independence.   <\/p>\n<p>Oh and they need to put a 20-30 line example first that looks like its doing something cool.  <\/p>","email":"http:\/\/pooteeweet.org\/","url":"http:\/\/pooteeweet.org\/","did":"51534139"},{"i":"44e186c6-482b-2577-4961-4e186c627835","d":"2006-08-15 08:33:10","u":"http:\/\/pooteeweet.org\/","n":"Lukas","c":"<p>It might also be a good idea to enter into some form of &quot;pissing-contest&quot; feature-table with some of the established PHP database persistance layers. If SDO can match these, then the fact that it also works with XML and other data sources might put SDO in a favorable situation. Also (faking - just kidding) benchmarks might also be worthwhile.   <\/p>\n<p>Hope Graham reads these comments :)  <\/p>","email":"http:\/\/pooteeweet.org\/","url":"http:\/\/pooteeweet.org\/","did":"51534140"},{"i":"44e19111-56dd-8946-8361-4e1911168d0e","d":"2006-08-15 09:17:05","u":"anon","n":"Paulg","c":"<b>getting real - world<\/b><br\/>\n<p>Does this SDO work constitute part of the  AJAX Client\/ SOA solution as mentioned by Harry Fuecks in february 06?   <\/p>\n<p>AJAX_-_HTML++_OR_Client-SOA? (http:\/\/www.sitepoint.com\/blogs\/2006\/02\/15\/two-kinds-of-ajax-html-vs-client-soa\/)   <\/p>\n<p>If so a simple client-side AJAX app demo might win a few hearts.   <\/p>\n<p>  <\/p>","email":"Paulg","url":null,"did":"51534142"},{"i":"44e19ffb-4452-5113-2791-4e19ffb2925f","d":"2006-08-15 10:20:42","u":"anon","n":"gcc@php.net\/Graham","c":"<b>Feedback on feedback<\/b><br\/>\n<p>Firstly, thanks to Wez for helping solicit feedback.  I'd like to think that Java heritage is not always a bad thing, since this should lead to better interoperability with non-PHP environments.  Having said that, one of the things we are continuing to work hard to achieve is to produce something which is native to PHP in all respects; API, implementation, documentation, repository, ...  We're exploiting the dynamic nature of PHP and in many ways the resulting API is similar to SimpleXML.  If there are any concrete examples where the Java heritage shines through we'd be keen to know what they are.   <\/p>\n<p>I can identify with some of AC's comments regarding the articles.  We're learning all the time about how to pitch this stuff properly.  To try to help with the &quot;initial ideas&quot; we have been blogging (a little infrequently) writing demos, and pitching on the conference circuit.  Most of this material is available here: http:\/\/www.ibm.com\/developerworks\/blogs\/page\/phpblog   <\/p>\n<p>Thanks to Lukas for the invite to a &quot;*******-contest&quot; (my terms of employment probably don't allow me to use that word in a public forum ;-) ).  It's not particularly tempting, since it has never been our intention to create a feature rich database persistence layer.  We've tried to keep the database support simple.  There are many things we could add and probably quite a few we should.  If there are specific capabilities people need that we don't provide, we'd love to hear from them.   <\/p>\n<p>As for TLA's, I agree that they can get in the way initially,  but hey, doesn't &quot;PHP&quot; suffer this problem? ;-)  <\/p>","email":"gcc@php.net\/Graham","url":null,"did":"51534144"}]