[{"i":"41bfbbba-1769-1560-6612-1bfbbba24985","d":"2004-12-15 04:21:14","u":"anon","n":"Marcus Whitney","c":"<b>whoa<\/b><br\/>\n<p>ok.  I have the perfect test for this.  This is awesome.  I wonder how many PHP people even uderstand how valuable this is.  <\/p>","email":"Marcus Whitney","url":null,"did":"51534788"},{"i":"41c06b76-3e2b-0558-4576-1c06b76388e2","d":"2004-12-15 16:51:02","u":"anon","n":"lists@cyberlot.net","c":"<b>Awesome<\/b><br\/>\n<p>I can see tons of possible use for this in the future, The things I could do to my socket server oh my.   <\/p>\n<p>I was going to use http:\/\/us2.php.net\/manual\/en\/function.register-tick-function.php   <\/p>\n<p>But this looks to be a bit cleaner, also ticks &quot;stop&quot; the script while they are processing, From what your saying, yours does not, in effect is multi-processing  <\/p>","email":"lists@cyberlot.net","url":null,"did":"51534789"},{"i":"41c077d0-9ae7-2453-7804-1c077d06c6ae","d":"2004-12-15 17:43:44","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>It doesn't fork<\/b><br\/>\n<p>It's still the same process (and the same thread), and works similarly to how you might implement it with ticks, except that it uses your CPU much more efficiently.  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org","did":"51534790"},{"i":"41d20f00-cd02-8922-2855-1d20f0031106","d":"2004-12-29 01:57:20","u":"anon","n":"michael@kimsal.com","c":"<b>objects<\/b><br\/>\n<p>Can the 'handlers' be objects\/methods instead of just raw functions?  Thanks...  <\/p>","email":"michael@kimsal.com","url":null,"did":"51534793"},{"i":"42a3c93b-3bbf-6196-3434-2a3c93b67099","d":"2005-06-06 03:55:39","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>handlers are callbacks<\/b><br\/>\n<p>they're just like any other callback in PHP; they can be a string representing the name of a function, or they can be an array representing an object or class method.  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org","did":"51534794"},{"i":"43d8f0fb-bafe-5852-2338-3d8f0fb802c4","d":"2006-01-26 15:55:39","u":"anon","n":"pigo_chu@hotmail.com","c":"<b>event_dispatch can't done<\/b><br\/>\n<p>I use PHP 5.1.2 and event-0.9.1 on my os fedora core3 I also installed APC 3.0.8   <\/p>\n<p>When I run sample.php(in CLI mode) , it happend event... but can't done ... After I try many times ... I got a error message &quot;[Thu Jan 26 23:49:18 2006] [apc-error] apc_sem_create: semget(0,...) failed: No space left on device&quot;  <\/p>","email":"pigo_chu@hotmail.com","url":null,"did":"51534796"},{"i":"448f9661-d1a9-5477-2254-48f9661c1da9","d":"2006-06-14 04:53:53","u":"anon","n":"e@osterman.com","c":"<b>Awesome contribution<\/b><br\/>\n<p>Thanks for the awesome contribution. It works like a charm and whatever you don't discontinue supporting it! It blows doors off of doing it manually with while loops and timers.. or like someone else mentioned tick call backs.   <\/p>\n<p>Best Regards,   <\/p>\n<p>Erik Osterman  <\/p>","email":"e@osterman.com","url":null,"did":"51534798"}]