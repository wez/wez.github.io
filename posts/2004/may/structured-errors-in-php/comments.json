[{"i":"540e696b-c791-4c63-ad95-99ea6ae6a773","d":"2004-04-13 13:24:03","u":"http:\/\/ilia.ws\/","n":"Ilia Alshanetsky","c":"<b>Suggestion<\/b><br\/>\n<p>Instead of having to declare exception maps etc... why not simply make PHP do what other languages such as C did for years. When an error occurs set php_errorno to the code representing the error and allow the user to use that code to determine how to handle the error. If they want to see the human readable error string they would call php_err_str(int php_errorno) giving them the description of the error.  <\/p>","email":"http:\/\/ilia.ws\/","url":"http:\/\/ilia.ws\/"},{"i":"2197ad5c-98f0-4a53-a7e0-80de837f7ab3","d":"2004-04-13 13:25:52","u":"anon","n":"george@omniti.com","c":"<b>This sounds familiar<\/b><br\/>\n<p>This sounds very much like something proposed and discarded during the i18n error message thread on php-dev 2 years ago.  I like the idea then, and still like it now, but I recall it meeting stiff resistance then.   <\/p>\n<p>Of course it didn't have Wez behind it.  <\/p>","email":"george@omniti.com","url":null},{"i":"28df9a7a-a8fa-4f5d-830c-527a3845b1ed","d":"2004-04-13 13:28:11","u":"anon","n":"george@omniti.com","c":"<b>BTW<\/b><br\/>\n<p>First, I disagree with Ilia's suggestion.  The simplicity of basic error-handling in C is not a strength, but something to be lived with.  It should be made easier to use in PHP.   <\/p>\n<p>Second (and most importantly) - you've somehow disabled the scroll bar on your blog.  It makes it a bitch to navigate.  <\/p>","email":"george@omniti.com","url":null},{"i":"ecb4f7b6-832d-4084-9e4e-fb0eb51903d0","d":"2004-04-13 14:31:04","u":"anon","n":"alan@akbkhome.com","c":"<b>perhaps use a localized set_error_handler<\/b><br\/>\n<p>make me think of something like:   <\/p>\n<p>local.error.handler(E.EXCEPTION, E.NOTICE); or   <\/p>\n<p>local.error.handler(new Exception, E.NOTICE);   <\/p>\n<p>a little more like the current set.error.handler(), and alot simpler, to grasp..   <\/p>\n<p>(.dots should be underscores - but I couldnt figure out the markup language..)   <\/p>\n<p>  <\/p>","email":"alan@akbkhome.com","url":null},{"i":"35727774-3b44-4ca5-a140-4e9c1e370026","d":"2004-04-13 14:48:17","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>i18n thread of doom<\/b><br\/>\n<p>I remember the i18n thread.  Things are a little different now that we have try ... catch; it shouldn't be too hard to add finally to the engine, and then we have pretty much all we need to do the rest in the PHP infrastructure.   <\/p>\n<p>In response to Ilia, you could do that, although, IMO, a super-global is a little cleaner, particularly if you want that error code to propogate back up from a user-space function definition.   <\/p>\n<p>Lastly, moz scrollbar problem should be less of a problem (force the CSS to reload though).  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"1d3352ff-ee2b-40b5-995f-4b41b5d2f03c","d":"2004-04-15 22:18:12","u":"anon","n":"gabriel ricard","c":"<p>gah, i had this nice long example and the formatting borked it. oh well.   <\/p>\n<p>i agree with alan about the local error handler.   <\/p>\n<p>no matter how you change the syntax, or make it look not-so-ugly, it's still going to look like an ugly hack. combined with try\/catch and regular error handling, it only adds needless nesting and indentation to your code.   <\/p>\n<p>i'd just stick with the standard keywords and control structures. you can take a look at OpenACS sometime for an example of how things can get messy looking when you blur the lines between function calls and control structures, and implement various custom versions of both. tcl lets you get away with some pretty nasty stuff.  <\/p>","email":"gabriel ricard","url":null},{"i":"29204757-16d7-4391-a0a7-75b36c908ad5","d":"2004-04-15 22:39:06","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>Everyone always focuses on the side-effects rather than the main thing<\/b><br\/>\n<p>The main thing being that our regular error codes are structured and accessible via a super-global.   <\/p>\n<p>The OO\/Exception mapping is a side-effect that meets the demands of the OO maniacs; we don't have to have that part.   <\/p>\n<p>Regarding the formatting... what broke?  And did you read the formatting guide?  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"caac63bc-9b08-4c18-a856-c18e18e31762","d":"2004-04-16 13:24:54","u":"anon","n":"gabriel ricard","c":"<b>hmm...<\/b><br\/>\n<p>I think we may all agree that the main thing here is good, that's why we're looking at the side-effects. Making it easier to handle errors is a good thing, and a given. Implementing it in a non-shitty way is the tough part. ;)   <\/p>\n<p>As for the formatting, I wrote some pseudo-php code including curly braces and the blog swallowed everything between them. I didn't see a way to escape them in the formatting guide.  <\/p>","email":"gabriel ricard","url":null},{"i":"494e748f-f89d-47a6-90d3-26188d5ee826","d":"2004-04-16 14:38:25","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>yep, it's hard<\/b><br\/>\n<p>Making stuff work everywhere for everyone is going to look nasty no matter what you do.  Personally, I would be happy with $_ERROR and leave it to the app to decide what to do.   <\/p>\n<p>The fear is that I might download a class and start using it and find that the way it handles and propogates errors really sucks; this is where it would be nice to isolate its error handling.  However, you could argue that if the error stuff sucks, you should be looking for different code ;-)   <\/p>\n<p>Re: formatting, it seems I omitted the {quote: } markup, which is useful for left-curly braces.  I also made it a little more obvious how to get a pre-formatted paragraph (indent it with two or more spaces).   <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"ab46bcfe-0eb5-4c92-bf1a-bc283d5ac50c","d":"2004-07-07 20:30:11","u":"anon","n":"Justin Patrin (papercrane@reversefold.com)","c":"<b>Great Idea!<\/b><br\/>\n<p>I've been trying to get something similar built into PEAR for PHP5 to allow people to choose whether they want exceptions or return values.   <\/p>\n<p>How could this be used for PHP code? If I write a library which uses exceptions, could this scheme make it send a return value insetad, or would the $_ERROR array just be populated so I'd have to check that?  <\/p>","email":"Justin Patrin (papercrane@reversefold.com)","url":null}]