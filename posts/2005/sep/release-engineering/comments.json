[{"i":"432e144d-e2ae-3386-7569-32e144d51b04","d":"2005-09-19 01:28:45","u":"anon","n":"Helgi \u00deormar","c":"<p>Those are valid points. But if you have PEAR 1.4 installed then you can maintain the v1 of package.xml and do a pear convert before each release and voila you should have a working package2.xml, but it can't convert back, which is a shame :\/   <\/p>\n<p>Also I had a brief chat with Greg, where he enlightened me about that http:\/\/pear.php.net\/package\/PEAR_PackageFileManager can create both v1 and v2 package.xml files from you from a 1x php file you'd maintain.   <\/p>\n<p>Just to get it out in the open, it is possible to maintain one file and still have both formats, on the cost of some features in 1.4, which are anyway not important to most packages.  <\/p>","email":"Helgi --ormar","url":null},{"i":"432e1622-bc9c-2465-7798-32e1622cfb2d","d":"2005-09-19 01:36:34","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>it needs to be easy<\/b><br\/>\n<p>If the packager needs to install supplemental software to successfully create a package, then there is something broken with the design of the packaging tools.   <\/p>\n<p>If &quot;pear convert&quot; works, then why isn't it built into the &quot;pear package&quot; phase when no package2.xml is specified?   <\/p>\n<p>  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"432e2b43-f569-8507-8238-32e2b4383c82","d":"2005-09-19 03:06:43","u":"anon","n":"clay@killersoft.com","c":"<b>The point is moot<\/b><br\/>\n<p>As with a lot of things related to PEAR, there is some confusion here.   <\/p>\n<p>While it is true that the 'pear' command supports a 'package' subcommand, 'pear' by itself is really the installer; not the full deluxe set of packaging tools.   <\/p>\n<p>PEAR_PackageFileManager is exactly what you need, and what everyone who is maintaining more than one package needs. In the interest of trying to keep bloat to a minimum, PEAR_PackageFileManager isn't a part of the PEAR core, nor should it be.   <\/p>\n<p>As for why auto-conversion isn't built into the 'pear package' command, why should it be? All conversion does is re-phrase what's already stated in package.xml to package2.xml -- and since package.xml is supported by PEAR 1.4.0 and will be for the foreseeable future, you only need a package2.xml if you intend to take advantage of the additional features that package2.xml offers.   <\/p>\n<p>If you're not interested in offering those features (and it doesn't seem like you are), then this whole discussion is a non-issue: you don't need to do anything related to package2.xml, and therefore, no supplemental software is needed for you to package your stuff and maintain your package.xml files.  <\/p>","email":"clay@killersoft.com","url":null},{"i":"432e38d2-81f8-3027-6063-32e38d2dcf51","d":"2005-09-19 04:04:34","u":"anon","n":"Greg Beaver","c":"<b>for the record...<\/b><br\/>\n<p>For the record, I sent a simple PEAR_PackageFileManager script for generating package.xml, package2.xml, and also a binary package package.xml for PDO to Wez on August 12.   <\/p>\n<p>What it requires is modifying these lines for each release:   <\/p>\n<p>$version = '1.whatever'; $apiversion = '1.whatever'; $notes = &lt;&lt;&lt;EOF blah blah blah PDO blah blah blah EOF;   <\/p>\n<p>That sounds pretty difficult to me, I don't know.  In fact, since each driver needs to be released at the same time, and needs the same version, you can also quite easily extend this so that all 18 files are auto-generated from 1 script.  I offered to do this after having any feedback.   <\/p>\n<p>This is a question of irrational fear of change, nothing more.  Another word for what's going on would be &quot;useless FUD&quot;  <\/p>","email":"Greg Beaver","url":null},{"i":"432e51e6-8d16-9429-3105-32e51e64b673","d":"2005-09-19 05:51:34","u":"http:\/\/derickrethans.nl\/","n":"Derick Rethans","c":"<b>...<\/b><br\/>\n<p>I'm with Wez on this one. Greg, the point is that we do not <b>want<\/b> extra things besides just editing one file and typing &quot;pear package&quot;. Having to use PEAR_Package_File_Manager is more cumbersome (and uptil now I've never heard of it either).  <\/p>","email":"http:\/\/derickrethans.nl\/","url":"http:\/\/derickrethans.nl\/"},{"i":"432e6841-4ff2-8511-9661-32e68416a0f4","d":"2005-09-19 07:26:57","u":"http:\/\/www.killersoft.com\/randomstrings\/","n":"Clay Loveless","c":"<b>FUD<\/b><br\/>\n<p>Derick, the point is that you do not <b>need<\/b> extra things.   <\/p>\n<p>You guys are missing the basic point: you don't need to do anything different than you're doing now.  <\/p>","email":"http:\/\/www.killersoft.com\/randomstrings\/","url":"http:\/\/www.killersoft.com\/randomstrings\/"},{"i":"432e93a9-f7d2-6267-1511-32e93a952c80","d":"2005-09-19 10:32:09","u":"http:\/\/pooteeweet.org\/","n":"Lukas","c":"<p>Indeed. The package2.xml is about stuff that cannot be done with package.xml in which case it obviously does not make sense to generate a package.xml from package2.xml since you cannot map everything properly anyways and the reason for using a package2.xml is to use exactly those features that you cannot map.   <\/p>\n<p>So in the end: Nothing has changed.   <\/p>\n<p>However if you do want to provide both files, because you can somehow gracefully also provide a toned down version of your package for old package.xml users then you can simply use PEAR_PackageFileManager. I find it quite convinient because it also handles my file section, the date, the changelog etc.   <\/p>\n<p>As far as I know you could also just put a dependency on PEAR 1.4.0 and drop the package.xml in this case and only use a package2.xml.  <\/p>","email":"http:\/\/pooteeweet.org\/","url":"http:\/\/pooteeweet.org\/"},{"i":"432eb41e-4292-8618-3517-32eb41e27c24","d":"2005-09-19 12:50:38","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>that's not what we're being told<\/b><br\/>\n<p>If we can stick with package.xml, then wtf are we being told that we <b>must<\/b> upgrade to package2.xml then?  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"432eb91a-1ad9-5292-7884-32eb91ac5b87","d":"2005-09-19 13:11:54","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>FUD?<\/b><br\/>\n<p>Last week I could create packages using a single xml file and a single command line invocation.  Next week, I'll require a third party pear package and need to learn a second xml file format.  I'll need to install that third party pear package on each machine I use to develop on (3 at home and 20 at work).   <\/p>\n<p>Doesn't this sound overly hard to you? This isn't FUD, it's annoyance.  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"432ecdc0-c744-3734-5153-32ecdc03f61c","d":"2005-09-19 14:40:00","u":"anon","n":"arnaud@limbourg.com","c":"<b>Upgrade<\/b><br\/>\n<p>May I ask who says you must upgrade to package2.xml ?  <\/p>","email":"arnaud@limbourg.com","url":null},{"i":"432f7c53-eabb-8379-5720-32f7c532247e","d":"2005-09-20 03:04:51","u":"anon","n":"alan@akbkhome.com","c":"<b>discussed already<\/b><br\/>\n<p>I initialed a discussion on pear-dev a few months ago about this. (I had the same issues with the svn extension)   <\/p>\n<p>In principle, Greg agreed that we should be able to add extra tags to package.xml files to autogenerate package2.xml files at packaging time. (which can be used internally, as they are more robust, and can be checked better).   <\/p>\n<p>Unfortunatly no-one, including me has volunteered to do the work involved to make this happen.   <\/p>","email":"alan@akbkhome.com","url":null}]