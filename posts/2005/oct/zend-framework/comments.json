[{"i":"435da834-f205-0346-6804-35da834e1c7a","d":"2005-10-25 03:36:20","u":"anon","n":"Chris Shiflett","c":"<p>I hadn't considered the &quot;clean IP&quot; angle on things. Do you know how businesses handle open source projects such as PHP itself? I remember all the brouhaha surrounding Linux and SCO, but I never heard anything very conclusive about this particular issue.  <\/p>","email":"Chris Shiflett","url":null},{"i":"435daa32-a048-6017-6756-35daa324e848","d":"2005-10-25 03:44:50","u":"anon","n":"noel darlow","c":"<b>unit tests?<\/b><br\/>\n<p>Hi   <\/p>\n<p>The first thing I'm looking for in a new piece of code are unit &amp; etc tests. Will this be a feature of the new Zend framework?   <\/p>\n<p>Also, it sounds like it's going to be all OOP - is that correct?   <\/p>\n<p>On another note, if licensing issues were used to pitch the Zend framework I don't think I'd be too comfortable with that. It wouldn't be fair to imply that other, competing open source libraries are flawed in that respect (although you would be justified in naming specific examples where you believe this to be a problem). That may not have been your intention.  <\/p>","email":"noel darlow","url":null},{"i":"435daaff-4c8c-2750-9329-35daaff08621","d":"2005-10-25 03:48:15","u":"anon","n":"thekabal@gmail.com","c":"<b>License?<\/b><br\/>\n<p>Could you shed some light on whether the license will be PHPL-ish, which the faq implies, or something that is GPL-compatible (PHPL is NOT GPL compatible), like perhaps the BSDL?   <\/p>\n<p>Thanks for the further info.  <\/p>","email":"thekabal@gmail.com","url":null},{"i":"435dbca8-e1b6-8391-8536-35dbca831fb5","d":"2005-10-25 05:03:36","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>Clean IP<\/b><br\/>\n<p>In response to Chris, there is a difference between using PHP the language, which is typically used un-modified, and integrating PHP scripts into your own code.  It's pretty clear that PHP is free and is going to be around for a while, regardless of which specific FOSS license its published under.  It's much less clear what the implications of &quot;linking&quot; to some 3rd-party code might be and how that might taint your own application code.   <\/p>\n<p>Don't take this &quot;Clean IP&quot; angle to imply that all other code has dubious legal origins, I definitely didn't say that, and that message isn't part of the &quot;pitch&quot;.   <\/p>\n<p>IP Concerns are very real; I've had a couple of customers bring them up in the past.  It boils down to trust; It doesn't matter if you and a thriving community have written the best code in the world; without someone to vouch that all proper measures were taken, there is an increased risk associated with your project.   <\/p>\n<p>That risk might seem tiny, but the whole SCO\/linux thing shows that it can come at you from out of the blue.   <\/p>\n<p>I don't want to make too big a deal out of &quot;Clean IP&quot;, it's just something that we, as FOSS developers, don't tend to think about.   <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"435dbf17-a674-0714-5634-35dbf17bf297","d":"2005-10-25 05:13:59","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>OOP and testing and stuff<\/b><br\/>\n<p>Yes, the Zend Framework is PHP 5 OOP based, with unit testing.  There's also documentation (quoting Andi: &quot;Documentation is key&quot;).   <\/p>\n<p>I don't know the exact licensing that will be used, but the intention is to provide clean, integration friendly components.  It definitely won't be viral, and will most likely be something BSDish with some kind of patent attribution clause and contributor license agreement.  <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"435dcec3-560b-0505-3431-35dcec379318","d":"2005-10-25 06:20:51","u":"anon","n":"nick@trickie.org","c":"<b>Contributing<\/b><br\/>\n<p>Hi Wez,   <\/p>\n<p>Do you have any tips on how one could contribute to the project? Is this going to be open (once a developer is known and has agreed to IP stipulations etc)?   <\/p>\n<p>Might be jumping the gun, but we have just decided to halt work on a framework that supplies (just by looking at the package names in your post) similar functionality for PHP5.1\/PDO. No point duplicating...  <\/p>","email":"nick@trickie.org","url":null},{"i":"435dd84d-a368-5860-1734-35dd84d7ecd1","d":"2005-10-25 07:01:33","u":"anon","n":"noel darlow","c":"<b>OOP and testing and stuff<\/b><br\/>\n<p>Hi   <\/p>\n<p>Thanks for your reply. Will be looking forward to the Zend release.   <\/p>\n<p>Noel  <\/p>","email":"noel darlow","url":null},{"i":"435ddb8f-a143-4867-0426-35ddb8f7ca51","d":"2005-10-25 07:15:26","u":"anon","n":"Ivo Jansch","c":"<b>Ruby on Rails for PHP<\/b><br\/>\n<p>Seeing the filenames, I immediately thought 'Ruby on Rails for PHP'. This was inforced by your mention of 'smtp support'. One of the three focus points Ruby on Rails mentions on its site is the smtp engine (which I find funny, to me smtp is just a technology that you might use for some feature, not a core framework target thing)   <\/p>\n<p>But if this is indeed 'php on rails' then why not support a project like Cake which is already more than halfway there? (or any of the other ror clones)   <\/p>\n<p>  <\/p>","email":"Ivo Jansch","url":null},{"i":"435e029b-c62f-4894-1569-35e029b6f095","d":"2005-10-25 10:02:03","u":"anon","n":"gugigugi@net.hr","c":"<b>Where is the difference...<\/b><br\/>\n<p>Between this and PEAR? I did not see anything that is not already available there. Could anyone give me some valid reason why I should move from Smarty to ztemplate? Or from PEAR::DB to ZDBadapter? Or is this just another hype Zend is trying to create to get more bussines?  <\/p>","email":"gugigugi@net.hr","url":null},{"i":"435e2830-29c9-1282-1450-35e2830d52c4","d":"2005-10-25 12:42:24","u":"anon","n":"ryanwray@gmail.com","c":"<b>The difference...<\/b><br\/>\n<p>I would hope that ZTemplate has a better design then Smarty, and like wise for ZDBAdapter and PEAR::DB. One would hope the difference in design would be enough to make the change, otherwise, yes, it would be a waste of time. One of the goals for the project is to keep every clear and simple to use, without forcing you to adopt the entire framework throughout your application Of course, it sounds like the plan is to keep dependancies to a minimum, and it will probably be the case that if you want to use Smarty instead of ZTemplate, go ahead. You can pick and choose the controllers\/components\/libraries\/whatever you want to use, and mix and match external ones.  <\/p>","email":"ryanwray@gmail.com","url":null},{"i":"435e2b5e-0139-6260-2636-35e2b5ee4027","d":"2005-10-25 12:55:58","u":"anon","n":"Pierre","c":"<b>Better, faster, higher,  hope you have a parachute...<\/b><br\/>\n<p>Ryan got the idea, Hope. In my oppinion this is hopeless and slighty respectless to the people who actually brought PHP where it is now, like Horde, PEAR for the components repository, or other projects like EZ or Typo3 (and all other you like to put here ;).   <\/p>\n<p>Whether we like those projects or not, they provide quality packages (I do not say that all are good), this framework\/component library\/whatever attempt is everything you want but a sign that the community is the target or the source.   <\/p>\n<p>This is the only problem here, as it was already the case in nearly all marketing actions from Zend, giving wrong informations (in this case, nothing is good outthere and only them know what to do and how to do it).   <\/p>\n<p>Anyway, have fun with it :)   <\/p>\n<p>  <\/p>","email":"Pierre","url":null},{"i":"435e3552-0730-7382-5062-35e3552044c0","d":"2005-10-25 13:38:26","u":"anon","n":"Guillaume","c":"<b>Release date?<\/b><br\/>\n<p>When can we expect a first release to the public?  <\/p>","email":"Guillaume","url":null},{"i":"435e4469-4178-6097-1876-35e446906fa8","d":"2005-10-25 14:42:49","u":"http:\/\/netevil.org\/","n":"wezfurlong","c":"<b>Respect?<\/b><br\/>\n<p>Zend collaborating on a framework with other businesses is no more disrespectful of other frameworks like PEAR, Horde etc. than any of those frameworks are to each other.   <\/p>\n<p>Let's pick a random example; Davey has been working on his own framework, with a view to making money out of it in some way.  Is he being disrespectful to PEAR, Horde etc?  How is that different from the ZF, which is intended to be used for free?   <\/p>","email":"wez@netevil.org","url":"http:\/\/netevil.org"},{"i":"435e46ea-3fda-2696-7426-35e46eaa7b18","d":"2005-10-25 14:53:30","u":"anon","n":"Pierre","c":"<b>RE: Respect?<\/b><br\/>\n<p>It is not the fact that Zend is working on a new better faster framework that is respectless but the argumentation used in the announcements and the website.   <\/p>\n<p>It is only the same way that was used in the past, huge marketing, announcements and PR to disinform non technical people.   <\/p>\n<p>Zend has a much more larger communication force than any real OS projects, they use it in a way I completelly disagree (and I'm not alone with this view), and I'm pretty sure you (at least partially) agree with me here.   <\/p>\n<p>Notice already the naming difference between the announcement and the current page, PCP, PHP Community Project to Zend Framework. That only confirms the initial idea I got from the announcement.   <\/p>\n<p>Now, about the idea of a Zend Framework, it is all benefits for PHP, choices and fair fights between projects are good.  <\/p>","email":"Pierre","url":null},{"i":"435fe864-415b-4390-0989-35fe86457a76","d":"2005-10-26 20:34:44","u":"anon","n":"Clay Gordon","c":"<b>What is a framework?<\/b><br\/>\n<p>&quot;a standard library of components that you can drop into your application&quot; is not a framework, it's a library of components.   <\/p>\n<p>So, what constitutes a framework?   <\/p>\n<p>:Clay  <\/p>","email":"Clay Gordon","url":null},{"i":"4362f220-d32d-2861-8657-362f22030f9e","d":"2005-10-29 03:53:04","u":"anon","n":"Fataqui@netscape.net\/Sonia","c":"<b>Integrity is the key!<\/b><br\/>\n<p>Zend Framework   <\/p>\n<p>I am all for the Framework thingie &lt;- (my word) as long as it is based on it's own design. Not just calling something (AJAX) some other name when it has a real name already. Also any Framework is only as good as the integrity of the company or developer(s) that design it. As for the PHP Group, I feel the developers have done a awesome job keeping the community involved with everything happening in PHP, I think PHP is better because of this. As for Zend the company, I as a developer have limited trust. When one invests in something that is advertised to protect their intellectual property and it doesn't anymore and the company does nothing for a long time to show you that they will fix the problem then you to will have issues of trusting said company with anything that they might develop in the future!   <\/p>\n<p>Like anything related to computing, including creating software, web services, operating systems or a new framework. The item developed must prove to be stabile, never infringe on any copyright, do what it is advertised to do and be secure. That is the simple part, the hard part which accounts for 80% or more is the servicing that you provide for your developed item. If you don't provide good services you will never make it in a corporate environment!   <\/p>\n<p>Take Care, Wez! As always thanks for all your hard work...   <\/p>\n<p>Sonia  <\/p>","email":"Fataqui@netscape.net\/Sonia","url":null},{"i":"43638ded-2a50-6182-2969-3638ded264d1","d":"2005-10-29 14:57:49","u":"anon","n":"Kramer","c":"<b>Zend Framework<\/b><br\/>\n<p>HEre's from http:\/\/blog.enargi.com\/programming\/php\/zend-framework\/   <\/p>\n<p>It\u0092s great that there will be standardized framework in php. But why write framework in php itself? They program Zend engine, why not include that into C code or php engine itself. <ul>\n<li>If it\u0092s written in PHP, there will be installation mess again, like with PEAR. So if you want your product to work you\u0092ll include framework with product.\n <li>If it\u0092s written in PHP, performance-wise it will not give any advantage. So people looking for performance might as well choose another frameworks or write their own. This will reduce Zend framework acceptance.\n <li>It\u0092s too late again. They were late with PHP5, Now this. When framework comes out in 2006 (hopefully) as part of PHP6, there will be very mature PHP5 frameworks. Just look at Prado. Zend framework is year too late.\n   <\/ul>\n<p>Apart from standardization there\u0092s no advantages in Zend framework. It\u0092s great that they are doing it, but they still should implement framework at the engine level.  <\/p>","email":"Kramer","url":null},{"i":"4364b80c-279f-6444-8296-364b80ce7580","d":"2005-10-30 12:09:48","u":"http:\/\/pooteeweet.org\/","n":"Lukas","c":"<b>OSS cooperation<\/b><br\/>\n<p>So in terms of clean IP this means that you guys will not draw from any other open source code at all? Do you guys foresee there be some open source code that is clean in terms of IP and draw from that in that case?   <\/p>\n<p>Or will you require your developers to work from scratch in a clean room environment?  <\/p>","email":"http:\/\/pooteeweet.org\/","url":"http:\/\/pooteeweet.org\/"},{"i":"4369f2b4-04df-8073-9579-369f2b463ec5","d":"2005-11-03 11:21:24","u":"anon","n":"Bart van Bragt","c":"<b>Pitch<\/b><br\/>\n<p><ol>\n<li>&quot;Don't take this &quot;Clean IP&quot; angle to imply that all other code has dubious legal origins, I definitely didn't say that, and that message isn't part of the &quot;pitch&quot;.\n   <\/ol>\n<p>Eehm. As I read it the 'Clean IP' thing is the main pitch for this Zend Framework. There only seem to be two 'advantages' to using the Zend Framework instead of something like CakePHP. This 'Clean IP' thing (which sounds very FUD-ish to me) and the fact that Zend is behind it (which can be both an advantage and a disadvantage).   <\/p>\n<p>It looks like SCO has destroyed quite a bit in the last couple of years. SCO combined with the completely out of whack legal system in the US :) All very, very unproductive :\\\\ I guess we'll have to learn to live with that.   <\/p>\n<p>Anyway. Bottomline is that it's not fair to use this 'clean IP' thing (which implies that it's dangerous to use anything else) as a marketing pitch. It's nice for the big boys that have lots of scared lawyers (that would like to keep their job). It's something extra for the enterprise class customers, 'market' the framework on it's other (technical) merits to the rest of the world.  <\/p>","email":"Bart van Bragt","url":null},{"i":"436fcf4a-3b80-8811-3149-36fcf4b03ff4","d":"2005-11-07 22:03:54","u":"anon","n":"eran","c":"<b>How is it different than php on trax?<\/b><br\/>\n<p>how is Zend specifically different than PHP on Trax \nWarning: Missing argument 2 for wiki_restricted_markup_link() in \/Users\/wez\/Sites\/netevil\/include\/wiki.php on line 86\n (ttp:\/\/phpontrax.com).  I see that trax has yet to get testing functionality built into it, but i think they are considering using an existing PEAR library unit testing tool to handle that.   <\/p>\n<p>It seems to be very similar to Zend otherwise; much more similar than other php mvc frameworks out there.  currently i think it is only a couple hundred Kb in total size.  it is very close to Rails.  <\/p>","email":"eran","url":null},{"i":"43b818ff-de86-6029-0775-3b818ff22079","d":"2006-01-01 18:01:34","u":"anon","n":"elvigia","c":"<b>BC<\/b><br\/>\n<p>I hope Zend framework 1.0  will be compatible with 1.1 on so on. :P   <\/p>\n<p>If it follows the PHP core BC rules, it will go nowhere.   <\/p>\n<p>I hope I will not have to change tons of code over and over again, due to &quot;litle changes between versions&quot;.   <\/p>\n<p>  <\/p>","email":"elvigia","url":null},{"i":"43b8497d-e38d-3647-2518-3b8497d22152","d":"2006-01-01 21:28:29","u":"anon","n":"powerobject@yahoo.com","c":"<b>Major benefits of Zend Framework<\/b><br\/>\n<p>I see a wide array of benefits to using the Zend Framework:   <\/p>\n<p>1. Free license   <\/p>\n<p>2. Entire framework created from scratch - no obsolete code over-head hanging around for backward compatibility   <\/p>\n<p>3. Support and insistence of PHP 5   <\/p>\n<p>4. Extreme simplicity - easy to learn\/use   <\/p>\n<p>5. Light weight - so it can be used on very large websites   <\/p>\n<p>6. Free from IP infringement issues - very important!   <\/p>\n<p>7. Use only what you need in your logic. This feature used to be called serviced-based architecture (SBA) - instantiate only what you want on a need-to-use basis. I worked on SBA on PowerBuilder\/PFC before and can say it is the most optimal architecture. This keeps the performance at its peak (can be used even on large websites) as we don't need to load\/instantiate unnecessary classes into memory. If in doubt, try defining a couple of classes inside a single file, include it in another PHP file and run the debugger - you would notice it pre-loads each and every class found in the file into memory although class definitions themselves are not executable unless invoked\/instantiated.   <\/p>\n<p>I only hope they don't restrict us from using templating engines such as Smarty, Savant...   <\/p>\n<p>Shekar   <\/p>","email":"powerobject@yahoo.com","url":null},{"i":"44555a54-2b1d-9073-8006-4555a5436599","d":"2006-05-01 00:46:12","u":"anon","n":"deepfriedpudding@gmail.com","c":"<b>Agency<\/b><br\/>\n<p>I accept nothing less than the latest features to take advantage of any performance gain I can, and I believe that the Zend Framework has the right idea to only support newer versions of PHP.   <\/p>\n<p>I believe that this is exactly what the PHP community needs. Sure there are lots of PHP frameworks that exist but many of them are bloated or don't take full advantage of the latest PHP features. And I can't stand installing PEAR, it just doesn't meet my performance requirements.   <\/p>\n<p>I have developed and been using several classes that are very similar to what Zend Framework is providing but perfecting my code is an ongoing process. If Zend is willing to manage such I task then I welcome it. This will only allow me to be more efficient while writing PHP applications.   <\/p>\n<p>As a note for anyone who like their current PHP framework, keep using it. You're not going to wake up one morning with cops at your door just because you're not using Zend Framework. It's just another option that you may consider. The final choice is still up to you. And thankfully the opensource community is all about choices.  <\/p>","email":"deepfriedpudding@gmail.com","url":null}]